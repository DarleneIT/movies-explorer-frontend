{"ast":null,"code":"class ApiMain {\n  constructor(options) {\n    this.editUserInfo = data => {\n      return fetch(`${BASE_URL}/users/me`, {\n        method: \"PATCH\",\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`,\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          name: data.name,\n          email: data.email\n        })\n      }).then(res => getCheckResponse(res));\n    };\n    this._url = options.url;\n  }\n  _checkResponse(res) {\n    if (res.ok) {\n      return Promise.resolve(res.json());\n    }\n    return Promise.reject(`Ошибка ${res.status}`);\n  }\n  _request(path, options) {\n    return fetch(`${this._url}${path}`, options).then(this._checkResponse);\n  }\n\n  //Регистрация и авторизация\n  registration({\n    name,\n    email,\n    password\n  }) {\n    return this._request(\"/signup\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        name: name,\n        email: email,\n        password: password\n      })\n    });\n  }\n  authorization({\n    email,\n    password\n  }) {\n    return this._request(\"/signin\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email: email,\n        password: password\n      })\n    });\n  }\n\n  //Получение данных пользователя\n  getUser(token) {\n    return this._request(\"/users/me\", {\n      headers: {\n        authorization: `Bearer ${token}`\n      }\n    });\n  }\n\n  //Получение фильмов\n  getMovies(token) {\n    return this._request(\"/movies\", {\n      headers: {\n        authorization: `Bearer ${token}`\n      }\n    });\n  }\n\n  //Редактирование данных пользователя\n  setUserInfo(data) {\n    fetch(`${this._url}/users/me`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authorization: `Bearer ${localStorage.getItem(\"token\")}`\n      },\n      body: JSON.stringify({\n        name: data.name,\n        about: data.about\n      })\n    });\n    return this._checkResponse(response);\n  }\n  //\n\n  addMovie(data, token) {\n    return this._request(\"/movies\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authorization: `Bearer ${token}`\n      },\n      body: JSON.stringify({\n        country: data.country,\n        director: data.director,\n        duration: data.duration,\n        description: data.description,\n        year: data.year,\n        image: `https://api.nomoreparties.co${data.image.url}`,\n        trailerLink: data.trailerLink,\n        thumbnail: `https://api.nomoreparties.co${data.image.formats.thumbnail.url}`,\n        movieId: data.id,\n        nameRU: data.nameRU,\n        nameEN: data.nameEN\n      })\n    });\n  }\n  deleteMovie(cardId, token) {\n    return this._request(`/movies/${cardId}`, {\n      method: \"DELETE\",\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n  }\n}\nexport const apiMain = new ApiMain({\n  url: \"http://localhost:3000\"\n  //url: \"https://movies.nomoredomainsrocks.ru\",\n});","map":{"version":3,"names":["ApiMain","constructor","options","editUserInfo","data","fetch","BASE_URL","method","headers","Authorization","localStorage","getItem","body","JSON","stringify","name","email","then","res","getCheckResponse","_url","url","_checkResponse","ok","Promise","resolve","json","reject","status","_request","path","registration","password","authorization","getUser","token","getMovies","setUserInfo","about","response","addMovie","country","director","duration","description","year","image","trailerLink","thumbnail","formats","movieId","id","nameRU","nameEN","deleteMovie","cardId","apiMain"],"sources":["/Users/darlene/Desktop/dev/diploma/movies-explorer-frontend/frontend/src/utils/MainApi.js"],"sourcesContent":["class ApiMain {\n  constructor(options) {\n    this._url = options.url;\n  }\n\n  _checkResponse(res) {\n    if (res.ok) {\n      return Promise.resolve(res.json());\n    }\n    return Promise.reject(`Ошибка ${res.status}`);\n  }\n\n  _request(path, options) {\n    return fetch(`${this._url}${path}`, options)\n    .then(this._checkResponse);\n  }\n\n  //Регистрация и авторизация\n  registration({ name, email, password }) {\n    return this._request(\"/signup\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        name: name,\n        email: email,\n        password: password,\n      }),\n    });\n  }\n\n  authorization({ email, password }) {\n    return this._request(\"/signin\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        email: email,\n        password: password,\n      }),\n    });\n  }\n\n  //Получение данных пользователя\n  getUser(token) {\n    return this._request(\"/users/me\", {\n      headers: {\n        authorization: `Bearer ${token}`,\n      },\n    });\n  }\n\n  //Получение фильмов\n  getMovies(token) {\n    return this._request(\"/movies\", {\n      headers: {\n        authorization: `Bearer ${token}`,\n      },\n    });\n  }\n\n\n  //Редактирование данных пользователя\n  setUserInfo(data) {\n   fetch(`${this._url}/users/me`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n      },\n      body: JSON.stringify({\n        name: data.name,\n        about: data.about,\n      }),\n    });\n    return this._checkResponse(response);\n  }\n\n  editUserInfo = (data) => {\n    return fetch(`${BASE_URL}/users/me`, {\n      method: \"PATCH\",\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        name: data.name,\n        email: data.email,\n      }),\n    }).then((res) => getCheckResponse(res))\n  }\n  //\n\n\n  addMovie(data, token) {\n    return this._request(\"/movies\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authorization: `Bearer ${token}`,\n      },\n      body: JSON.stringify({\n        country: data.country,\n        director: data.director,\n        duration: data.duration,\n        description: data.description,\n        year: data.year,\n        image: `https://api.nomoreparties.co${data.image.url}`,\n        trailerLink: data.trailerLink,\n        thumbnail: `https://api.nomoreparties.co${data.image.formats.thumbnail.url}`,\n        movieId: data.id,\n        nameRU: data.nameRU,\n        nameEN: data.nameEN,\n      }),\n    });\n  }\n\n  deleteMovie(cardId, token) {\n    return this._request(`/movies/${cardId}`, {\n      method: \"DELETE\",\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    });\n  }\n}\n\nexport const apiMain = new ApiMain({\n  url: \"http://localhost:3000\",\n  //url: \"https://movies.nomoredomainsrocks.ru\",\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}