{"ast":null,"code":"class ApiMain {\n  constructor(options) {\n    this._url = options.url;\n  }\n  _checkResponse(res) {\n    if (res.ok) {\n      return Promise.resolve(res.json());\n    }\n    return Promise.reject(`Ошибка ${res.status}`);\n  }\n\n  //Регистрация и авторизация\n  _request(path, method, data) {\n    let body = data;\n    if (method === \"POST\" && data) {\n      body = JSON.stringify(data);\n    }\n    return fetch(`http://localhost:3000${path}`, {\n      method,\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body\n    }).then(this._checkResponse);\n  }\n  registration({\n    name,\n    email,\n    password\n  }) {\n    return this._request(\"/signup\", \"POST\", {\n      name,\n      email,\n      password\n    });\n  }\n  authorization({\n    email,\n    password\n  }) {\n    return this._request(\"/signin\", \"POST\", {\n      email,\n      password\n    });\n  }\n\n  //Получение данных\n  getUserData(token) {\n    return this._request(\"/users/me\", {\n      headers: {\n        authorization: `Bearer ${token}`\n      }\n    });\n  }\n\n  //Редактирование данных пользователя\n  async setUserInfo(data) {\n    const response = await fetch(`${this._url}/users/me`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authorization: `Bearer ${localStorage.getItem(\"token\")}`\n      },\n      body: JSON.stringify({\n        name: data.name,\n        about: data.about\n      })\n    });\n    return this._checkResponse(response);\n  }\n\n  //\n\n  getMovies(token) {\n    return this._request(\"/movies\", {\n      headers: {\n        authorization: `Bearer ${token}`\n      }\n    });\n  }\n  addMovie(data, token) {\n    return this._request(\"/movies\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`\n      },\n      body: JSON.stringify({\n        country: data.country,\n        director: data.director,\n        duration: data.duration,\n        description: data.description,\n        year: data.year,\n        image: `https://api.nomoreparties.co${data.image.url}`,\n        trailerLink: data.trailerLink,\n        thumbnail: `https://api.nomoreparties.co${data.image.formats.thumbnail.url}`,\n        movieId: data.id,\n        nameRU: data.nameRU,\n        nameEN: data.nameEN\n      })\n    });\n  }\n  deleteMovie(cardId, token) {\n    return this._request(`/movies/${cardId}`, {\n      method: \"DELETE\",\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n  }\n}\nexport const apiMain = new ApiMain({\n  url: \"http://localhost:3000\"\n  //url: \"https://movies.nomoredomainsrocks.ru\",\n});","map":{"version":3,"names":["ApiMain","constructor","options","_url","url","_checkResponse","res","ok","Promise","resolve","json","reject","status","_request","path","method","data","body","JSON","stringify","fetch","headers","then","registration","name","email","password","authorization","getUserData","token","setUserInfo","response","localStorage","getItem","about","getMovies","addMovie","Authorization","country","director","duration","description","year","image","trailerLink","thumbnail","formats","movieId","id","nameRU","nameEN","deleteMovie","cardId","apiMain"],"sources":["/Users/darlene/Desktop/dev/diploma/movies-explorer-frontend/frontend/src/utils/MainApi.js"],"sourcesContent":["class ApiMain {\n  constructor(options) {\n    this._url = options.url;\n  }\n\n  _checkResponse(res) {\n    if (res.ok) {\n      return Promise.resolve(res.json());\n    }\n    return Promise.reject(`Ошибка ${res.status}`);\n  }\n\n  //Регистрация и авторизация\n  _request(path, method, data) {\n    let body = data;\n    if (method === \"POST\" && data) {\n      body = JSON.stringify(data);\n    }\n    return fetch(`http://localhost:3000${path}`, {\n      method,\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body,\n    }).then(this._checkResponse);\n  }\n\n  registration({ name, email, password }) {\n    return this._request(\"/signup\", \"POST\", { name, email, password });\n  }\n\n  authorization({ email, password }) {\n    return this._request(\"/signin\", \"POST\", { email, password });\n  }\n\n  //Получение данных\n  getUserData(token) {\n    return this._request(\"/users/me\", {\n      headers: {\n        authorization: `Bearer ${token}`,\n      },\n    });\n  }\n\n\n  //Редактирование данных пользователя\n  async setUserInfo(data) {\n    const response = await fetch(`${this._url}/users/me`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n      },\n      body: JSON.stringify({\n        name: data.name,\n        about: data.about,\n      }),\n    });\n    return this._checkResponse(response);\n  }\n\n  //\n\n  getMovies(token) {\n    return this._request(\"/movies\", {\n      headers: {\n        authorization: `Bearer ${token}`,\n      },\n    });\n  }\n\n  addMovie(data, token) {\n    return this._request(\"/movies\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n      body: JSON.stringify({\n        country: data.country,\n        director: data.director,\n        duration: data.duration,\n        description: data.description,\n        year: data.year,\n        image: `https://api.nomoreparties.co${data.image.url}`,\n        trailerLink: data.trailerLink,\n        thumbnail: `https://api.nomoreparties.co${data.image.formats.thumbnail.url}`,\n        movieId: data.id,\n        nameRU: data.nameRU,\n        nameEN: data.nameEN,\n      }),\n    });\n  }\n\n  deleteMovie(cardId, token) {\n    return this._request(`/movies/${cardId}`, {\n      method: \"DELETE\",\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    });\n  }\n}\n\nexport const apiMain = new ApiMain({\n  url: \"http://localhost:3000\",\n  //url: \"https://movies.nomoredomainsrocks.ru\",\n});\n"],"mappings":"AAAA,MAAMA,OAAO,CAAC;EACZC,WAAWA,CAACC,OAAO,EAAE;IACnB,IAAI,CAACC,IAAI,GAAGD,OAAO,CAACE,GAAG;EACzB;EAEAC,cAAcA,CAACC,GAAG,EAAE;IAClB,IAAIA,GAAG,CAACC,EAAE,EAAE;MACV,OAAOC,OAAO,CAACC,OAAO,CAACH,GAAG,CAACI,IAAI,CAAC,CAAC,CAAC;IACpC;IACA,OAAOF,OAAO,CAACG,MAAM,CAAE,UAASL,GAAG,CAACM,MAAO,EAAC,CAAC;EAC/C;;EAEA;EACAC,QAAQA,CAACC,IAAI,EAAEC,MAAM,EAAEC,IAAI,EAAE;IAC3B,IAAIC,IAAI,GAAGD,IAAI;IACf,IAAID,MAAM,KAAK,MAAM,IAAIC,IAAI,EAAE;MAC7BC,IAAI,GAAGC,IAAI,CAACC,SAAS,CAACH,IAAI,CAAC;IAC7B;IACA,OAAOI,KAAK,CAAE,wBAAuBN,IAAK,EAAC,EAAE;MAC3CC,MAAM;MACNM,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDJ;IACF,CAAC,CAAC,CAACK,IAAI,CAAC,IAAI,CAACjB,cAAc,CAAC;EAC9B;EAEAkB,YAAYA,CAAC;IAAEC,IAAI;IAAEC,KAAK;IAAEC;EAAS,CAAC,EAAE;IACtC,OAAO,IAAI,CAACb,QAAQ,CAAC,SAAS,EAAE,MAAM,EAAE;MAAEW,IAAI;MAAEC,KAAK;MAAEC;IAAS,CAAC,CAAC;EACpE;EAEAC,aAAaA,CAAC;IAAEF,KAAK;IAAEC;EAAS,CAAC,EAAE;IACjC,OAAO,IAAI,CAACb,QAAQ,CAAC,SAAS,EAAE,MAAM,EAAE;MAAEY,KAAK;MAAEC;IAAS,CAAC,CAAC;EAC9D;;EAEA;EACAE,WAAWA,CAACC,KAAK,EAAE;IACjB,OAAO,IAAI,CAAChB,QAAQ,CAAC,WAAW,EAAE;MAChCQ,OAAO,EAAE;QACPM,aAAa,EAAG,UAASE,KAAM;MACjC;IACF,CAAC,CAAC;EACJ;;EAGA;EACA,MAAMC,WAAWA,CAACd,IAAI,EAAE;IACtB,MAAMe,QAAQ,GAAG,MAAMX,KAAK,CAAE,GAAE,IAAI,CAACjB,IAAK,WAAU,EAAE;MACpDY,MAAM,EAAE,OAAO;MACfM,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClCM,aAAa,EAAG,UAASK,YAAY,CAACC,OAAO,CAAC,OAAO,CAAE;MACzD,CAAC;MACDhB,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBK,IAAI,EAAER,IAAI,CAACQ,IAAI;QACfU,KAAK,EAAElB,IAAI,CAACkB;MACd,CAAC;IACH,CAAC,CAAC;IACF,OAAO,IAAI,CAAC7B,cAAc,CAAC0B,QAAQ,CAAC;EACtC;;EAEA;;EAEAI,SAASA,CAACN,KAAK,EAAE;IACf,OAAO,IAAI,CAAChB,QAAQ,CAAC,SAAS,EAAE;MAC9BQ,OAAO,EAAE;QACPM,aAAa,EAAG,UAASE,KAAM;MACjC;IACF,CAAC,CAAC;EACJ;EAEAO,QAAQA,CAACpB,IAAI,EAAEa,KAAK,EAAE;IACpB,OAAO,IAAI,CAAChB,QAAQ,CAAC,SAAS,EAAE;MAC9BE,MAAM,EAAE,MAAM;MACdM,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClCgB,aAAa,EAAG,UAASR,KAAM;MACjC,CAAC;MACDZ,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBmB,OAAO,EAAEtB,IAAI,CAACsB,OAAO;QACrBC,QAAQ,EAAEvB,IAAI,CAACuB,QAAQ;QACvBC,QAAQ,EAAExB,IAAI,CAACwB,QAAQ;QACvBC,WAAW,EAAEzB,IAAI,CAACyB,WAAW;QAC7BC,IAAI,EAAE1B,IAAI,CAAC0B,IAAI;QACfC,KAAK,EAAG,+BAA8B3B,IAAI,CAAC2B,KAAK,CAACvC,GAAI,EAAC;QACtDwC,WAAW,EAAE5B,IAAI,CAAC4B,WAAW;QAC7BC,SAAS,EAAG,+BAA8B7B,IAAI,CAAC2B,KAAK,CAACG,OAAO,CAACD,SAAS,CAACzC,GAAI,EAAC;QAC5E2C,OAAO,EAAE/B,IAAI,CAACgC,EAAE;QAChBC,MAAM,EAAEjC,IAAI,CAACiC,MAAM;QACnBC,MAAM,EAAElC,IAAI,CAACkC;MACf,CAAC;IACH,CAAC,CAAC;EACJ;EAEAC,WAAWA,CAACC,MAAM,EAAEvB,KAAK,EAAE;IACzB,OAAO,IAAI,CAAChB,QAAQ,CAAE,WAAUuC,MAAO,EAAC,EAAE;MACxCrC,MAAM,EAAE,QAAQ;MAChBM,OAAO,EAAE;QACPgB,aAAa,EAAG,UAASR,KAAM;MACjC;IACF,CAAC,CAAC;EACJ;AACF;AAEA,OAAO,MAAMwB,OAAO,GAAG,IAAIrD,OAAO,CAAC;EACjCI,GAAG,EAAE;EACL;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}